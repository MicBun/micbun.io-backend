// Code generated by mockery v2.42.1. DO NOT EDIT.

package micbunioserver

import (
	context "context"

	micbunio "github.com/MicBun/micbun.io-backend/rpc/micbunio"
	mock "github.com/stretchr/testify/mock"
)

// MockGuestbookRepo is an autogenerated mock type for the GuestbookRepo type
type MockGuestbookRepo struct {
	mock.Mock
}

type MockGuestbookRepo_Expecter struct {
	mock *mock.Mock
}

func (_m *MockGuestbookRepo) EXPECT() *MockGuestbookRepo_Expecter {
	return &MockGuestbookRepo_Expecter{mock: &_m.Mock}
}

// CreateGuestbook provides a mock function with given fields: ctx, in
func (_m *MockGuestbookRepo) CreateGuestbook(ctx context.Context, in *micbunio.CreateGuestbookRequest) error {
	ret := _m.Called(ctx, in)

	if len(ret) == 0 {
		panic("no return value specified for CreateGuestbook")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *micbunio.CreateGuestbookRequest) error); ok {
		r0 = rf(ctx, in)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockGuestbookRepo_CreateGuestbook_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateGuestbook'
type MockGuestbookRepo_CreateGuestbook_Call struct {
	*mock.Call
}

// CreateGuestbook is a helper method to define mock.On call
//   - ctx context.Context
//   - in *micbunio.CreateGuestbookRequest
func (_e *MockGuestbookRepo_Expecter) CreateGuestbook(ctx interface{}, in interface{}) *MockGuestbookRepo_CreateGuestbook_Call {
	return &MockGuestbookRepo_CreateGuestbook_Call{Call: _e.mock.On("CreateGuestbook", ctx, in)}
}

func (_c *MockGuestbookRepo_CreateGuestbook_Call) Run(run func(ctx context.Context, in *micbunio.CreateGuestbookRequest)) *MockGuestbookRepo_CreateGuestbook_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*micbunio.CreateGuestbookRequest))
	})
	return _c
}

func (_c *MockGuestbookRepo_CreateGuestbook_Call) Return(_a0 error) *MockGuestbookRepo_CreateGuestbook_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockGuestbookRepo_CreateGuestbook_Call) RunAndReturn(run func(context.Context, *micbunio.CreateGuestbookRequest) error) *MockGuestbookRepo_CreateGuestbook_Call {
	_c.Call.Return(run)
	return _c
}

// GetGuestbookList provides a mock function with given fields: ctx, in
func (_m *MockGuestbookRepo) GetGuestbookList(ctx context.Context, in *micbunio.GetGuestbookListRequest) (*micbunio.GetGuestbookListResponse, error) {
	ret := _m.Called(ctx, in)

	if len(ret) == 0 {
		panic("no return value specified for GetGuestbookList")
	}

	var r0 *micbunio.GetGuestbookListResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *micbunio.GetGuestbookListRequest) (*micbunio.GetGuestbookListResponse, error)); ok {
		return rf(ctx, in)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *micbunio.GetGuestbookListRequest) *micbunio.GetGuestbookListResponse); ok {
		r0 = rf(ctx, in)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*micbunio.GetGuestbookListResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *micbunio.GetGuestbookListRequest) error); ok {
		r1 = rf(ctx, in)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockGuestbookRepo_GetGuestbookList_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetGuestbookList'
type MockGuestbookRepo_GetGuestbookList_Call struct {
	*mock.Call
}

// GetGuestbookList is a helper method to define mock.On call
//   - ctx context.Context
//   - in *micbunio.GetGuestbookListRequest
func (_e *MockGuestbookRepo_Expecter) GetGuestbookList(ctx interface{}, in interface{}) *MockGuestbookRepo_GetGuestbookList_Call {
	return &MockGuestbookRepo_GetGuestbookList_Call{Call: _e.mock.On("GetGuestbookList", ctx, in)}
}

func (_c *MockGuestbookRepo_GetGuestbookList_Call) Run(run func(ctx context.Context, in *micbunio.GetGuestbookListRequest)) *MockGuestbookRepo_GetGuestbookList_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*micbunio.GetGuestbookListRequest))
	})
	return _c
}

func (_c *MockGuestbookRepo_GetGuestbookList_Call) Return(_a0 *micbunio.GetGuestbookListResponse, _a1 error) *MockGuestbookRepo_GetGuestbookList_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockGuestbookRepo_GetGuestbookList_Call) RunAndReturn(run func(context.Context, *micbunio.GetGuestbookListRequest) (*micbunio.GetGuestbookListResponse, error)) *MockGuestbookRepo_GetGuestbookList_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockGuestbookRepo creates a new instance of MockGuestbookRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockGuestbookRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockGuestbookRepo {
	mock := &MockGuestbookRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
